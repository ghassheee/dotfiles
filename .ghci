:set prompt "Î»> "
:set -XFlexibleInstances
:set -XMultiParamTypeClasses
:set -XLambdaCase
:set -XTemplateHaskell
:set -XDataKinds
:set -XAllowAmbiguousTypes   
:set -XRankNTypes
:set -XFlexibleContexts
-- :set -XGADTs
:set -ddump-deriv

-- hoogle
:def hoogle \s -> return $ ":! hoogle search -l --count=100 \"" ++ s ++ "\""
:def doc    \s -> return $ ":! hoogle search -l --info     \"" ++ s ++ "\""

:m +System.Directory 
let getLS = getDirectoryContents =<< getCurrentDirectory
let add_endline files = map (\s -> s ++ "\\\n") files
let ls = mapM putStrLn =<< getLS
:def ls \s -> do { files <- getLS; return $ show files }
